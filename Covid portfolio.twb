<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='owid-covid-data' inline='true' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.1blr1yv1pc54y815l6ez40fk3qfs'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/kiran/Downloads/owid-covid-data.csv' dataRefreshTime='' directory='C:/Users/kiran/Downloads' filename='C:/Users/kiran/AppData/Local/Temp/TableauTemp/1dixf4i0st8kjh17pe8qa1fl27qj/owid-covid-data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1blr1yv1pc54y815l6ez40fk3qfs' name='owid-covid-data.csv' table='[owid-covid-data#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:AH10001:no:A1:AH10001:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='total_cases_per_million' ordinal='6' />
            <column datatype='real' name='total_deaths_per_million' ordinal='7' />
            <column datatype='integer' name='icu_patients' ordinal='8' />
            <column datatype='real' name='icu_patients_per_million' ordinal='9' />
            <column datatype='integer' name='hosp_patients' ordinal='10' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='11' />
            <column datatype='integer' name='total_tests' ordinal='12' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='13' />
            <column datatype='real' name='positive_rate' ordinal='14' />
            <column datatype='real' name='tests_per_case' ordinal='15' />
            <column datatype='string' name='tests_units' ordinal='16' />
            <column datatype='integer' name='total_vaccinations' ordinal='17' />
            <column datatype='integer' name='people_vaccinated' ordinal='18' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='19' />
            <column datatype='integer' name='total_boosters' ordinal='20' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='21' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='22' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='23' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='24' />
            <column datatype='integer' name='population' ordinal='25' />
            <column datatype='real' name='population_density' ordinal='26' />
            <column datatype='real' name='median_age' ordinal='27' />
            <column datatype='real' name='gdp_per_capita' ordinal='28' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='29' />
            <column datatype='real' name='diabetes_prevalence' ordinal='30' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
            <column datatype='real' name='life_expectancy' ordinal='32' />
            <column datatype='real' name='human_development_index' ordinal='33' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1blr1yv1pc54y815l6ez40fk3qfs' name='owid-covid-data.csv' table='[owid-covid-data#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:AH10001:no:A1:AH10001:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='total_cases_per_million' ordinal='6' />
            <column datatype='real' name='total_deaths_per_million' ordinal='7' />
            <column datatype='integer' name='icu_patients' ordinal='8' />
            <column datatype='real' name='icu_patients_per_million' ordinal='9' />
            <column datatype='integer' name='hosp_patients' ordinal='10' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='11' />
            <column datatype='integer' name='total_tests' ordinal='12' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='13' />
            <column datatype='real' name='positive_rate' ordinal='14' />
            <column datatype='real' name='tests_per_case' ordinal='15' />
            <column datatype='string' name='tests_units' ordinal='16' />
            <column datatype='integer' name='total_vaccinations' ordinal='17' />
            <column datatype='integer' name='people_vaccinated' ordinal='18' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='19' />
            <column datatype='integer' name='total_boosters' ordinal='20' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='21' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='22' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='23' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='24' />
            <column datatype='integer' name='population' ordinal='25' />
            <column datatype='real' name='population_density' ordinal='26' />
            <column datatype='real' name='median_age' ordinal='27' />
            <column datatype='real' name='gdp_per_capita' ordinal='28' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='29' />
            <column datatype='real' name='diabetes_prevalence' ordinal='30' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
            <column datatype='real' name='life_expectancy' ordinal='32' />
            <column datatype='real' name='human_development_index' ordinal='33' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AH10001:no:A1:AH10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>154706</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Lethal Rate' datatype='real' name='[Calculation_2453898864956395520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_deaths]/[total_cases]' />
      </column>
      <column caption='% of Population vaccinated' datatype='real' default-format='p0%' name='[Calculation_3332382266708680726]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[people_fully_vaccinated]/[population]' />
      </column>
      <column aggregation='None' datatype='integer' name='[Total Deaths (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[total_deaths]' peg='0' size='69495' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' hidden='true' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' hidden='true' name='[excess_mortality]' role='dimension' type='ordinal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='dimension' type='ordinal' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='dimension' type='ordinal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='dimension' type='ordinal' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='dimension' type='ordinal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='dimension' type='ordinal' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='dimension' type='ordinal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='integer' name='[total_boosters]' role='dimension' type='ordinal' />
      <column caption='Total Boosters Per Hundred' datatype='real' name='[total_boosters_per_hundred]' role='dimension' type='ordinal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='dimension' type='ordinal' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='dimension' type='ordinal' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='real' hidden='true' name='[weekly_hosp_admissions]' role='dimension' type='ordinal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='real' hidden='true' name='[weekly_hosp_admissions_per_million]' role='dimension' type='ordinal' />
      <column caption='Weekly Icu Admissions' datatype='real' hidden='true' name='[weekly_icu_admissions]' role='dimension' type='ordinal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='real' hidden='true' name='[weekly_icu_admissions_per_million]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Attribute' name='[attr:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Avg' name='[avg:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Count' name='[cnt:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[diff:sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[gdp_per_capita]' derivation='Max' name='[max:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Max' name='[max:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Max' name='[max:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[people_vaccinated]' derivation='None' name='[none:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[human_development_index]' derivation='Sum' name='[sum:human_development_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='Sum' name='[sum:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated_per_hundred]' derivation='Sum' name='[sum:people_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Sum' name='[sum:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(Date))' hidden='true' name='[Action (DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/kiran/Documents/My Tableau Repository/Datasources/owid-covid-data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/16/2021 10:28:48 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='owid-covid-data' increment-value='%null%' refresh-type='create' rows-inserted='116565' timestamp-start='2021-09-16 10:28:48.479' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>0</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>408</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>2</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>408</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2353</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24571</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9361</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases_per_million</remote-alias>
              <ordinal>6</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38515</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_per_million</remote-alias>
              <ordinal>7</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21291</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[icu_patients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>icu_patients</remote-alias>
              <ordinal>8</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2677</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[icu_patients_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>icu_patients_per_million</remote-alias>
              <ordinal>9</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7202</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hosp_patients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hosp_patients</remote-alias>
              <ordinal>10</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8284</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hosp_patients_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hosp_patients_per_million</remote-alias>
              <ordinal>11</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15701</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>12</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55478</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests_per_thousand</remote-alias>
              <ordinal>13</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55478</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positive_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>positive_rate</remote-alias>
              <ordinal>14</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_per_case</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tests_per_case]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tests_per_case</remote-alias>
              <ordinal>15</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3152</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tests_units]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tests_units</remote-alias>
              <ordinal>16</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>17</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>18</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37481</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>19</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32303</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_boosters</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_boosters]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_boosters</remote-alias>
              <ordinal>20</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1198</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>21</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14838</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>22</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14360</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>23</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11886</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_boosters_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_boosters_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_boosters_per_hundred</remote-alias>
              <ordinal>24</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>107</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>25</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>388</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_density</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_density]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population_density</remote-alias>
              <ordinal>26</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>333</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_age</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_age</remote-alias>
              <ordinal>27</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp_per_capita</remote-alias>
              <ordinal>28</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>284</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cardiovasc_death_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cardiovasc_death_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cardiovasc_death_rate</remote-alias>
              <ordinal>29</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>281</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>diabetes_prevalence</remote-name>
              <remote-type>5</remote-type>
              <local-name>[diabetes_prevalence]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>diabetes_prevalence</remote-alias>
              <ordinal>30</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hospital_beds_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospital_beds_per_thousand</remote-alias>
              <ordinal>31</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>138</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[life_expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>life_expectancy</remote-alias>
              <ordinal>32</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>337</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>human_development_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[human_development_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>human_development_index</remote-alias>
              <ordinal>33</ordinal>
              <family>owid-covid-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>208</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[diff:sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:people_fully_vaccinated_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:population:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:median_age:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:human_development_index:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[__tableau_internal_object_id__].[cnt:owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_deaths_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_vaccinations_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:total_vaccinations_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:handwashing_facilities:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[attr:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[cnt:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:people_vaccinated_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:aged_70_older:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' palette='red_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#feb5a7'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data.csv' id='owid-covid-data.csv_10A35907D35140CC8517D8CF15458C0E'>
            <properties context=''>
              <relation connection='textscan.1blr1yv1pc54y815l6ez40fk3qfs' name='owid-covid-data.csv' table='[owid-covid-data#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:AH10001:no:A1:AH10001:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='total_deaths' ordinal='5' />
                  <column datatype='real' name='total_cases_per_million' ordinal='6' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='7' />
                  <column datatype='integer' name='icu_patients' ordinal='8' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='9' />
                  <column datatype='integer' name='hosp_patients' ordinal='10' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='11' />
                  <column datatype='integer' name='total_tests' ordinal='12' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='13' />
                  <column datatype='real' name='positive_rate' ordinal='14' />
                  <column datatype='real' name='tests_per_case' ordinal='15' />
                  <column datatype='string' name='tests_units' ordinal='16' />
                  <column datatype='integer' name='total_vaccinations' ordinal='17' />
                  <column datatype='integer' name='people_vaccinated' ordinal='18' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='19' />
                  <column datatype='integer' name='total_boosters' ordinal='20' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='21' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='22' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='23' />
                  <column datatype='real' name='total_boosters_per_hundred' ordinal='24' />
                  <column datatype='integer' name='population' ordinal='25' />
                  <column datatype='real' name='population_density' ordinal='26' />
                  <column datatype='real' name='median_age' ordinal='27' />
                  <column datatype='real' name='gdp_per_capita' ordinal='28' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='29' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='30' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
                  <column datatype='real' name='life_expectancy' ordinal='32' />
                  <column datatype='real' name='human_development_index' ordinal='33' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_9336C934EFFA498AAF46846CB17216D9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Cases and deaths Dash' type='sheet' worksheet='Number of cases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Cases and deaths Dash' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_CD95EA19387C41D6810A1484ECFF8E3A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Cases and deaths Dash' type='sheet' worksheet='Relationship b/w no. of deaths and GDP per Capita' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Cases and deaths Dash' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_B97F3A1CDB9645FCAD7D299BEC6B8CF3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Vaccination Dash' type='sheet' worksheet='% of Population fully vaccinated' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Vaccination Dash' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_40741DBF2B5540C3BD3A3DE7C99FE573]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Vaccination Dash' type='sheet' worksheet='Population fully and partially vaccinated on Sept 13, 2021' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Vaccination Dash' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_79770A5EC36448978CAF442FB04555C0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Vaccination Dash' type='sheet' worksheet='Partially and fully vaccinated population' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Vaccination Dash' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6_CBCD4631838E49F0A5DDA89E26DBC901]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Cases and deaths Dash' type='sheet' worksheet='Totals Tests' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Cases and deaths Dash' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_971A895B8CEF42C784089A87582EC9C5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Vaccination Dash' type='sheet' worksheet='Vaccinated population based on continents' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Vaccination Dash' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_CC725DB6404B4B6F933F507988EFFBEE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Cases and deaths Dash' type='sheet' worksheet='% of Positive cases that were lethal' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Cases and deaths Dash' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% of Population fully vaccinated'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='14'>&lt;Sheet Name&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
            <column caption='% of Population vaccinated' datatype='real' default-format='p0%' name='[Calculation_3332382266708680726]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[people_fully_vaccinated]/[population]' />
            </column>
            <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3332382266708680726]' derivation='Sum' name='[sum:Calculation_3332382266708680726:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:Calculation_3332382266708680726:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:people_vaccinated:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:total_vaccinations:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:total_vaccinations:qk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:people_vaccinated:qk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:Calculation_3332382266708680726:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[attr:location:nk]' value='false' />
            <format attr='in-tooltip' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:ok]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' value='Location'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Location</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Date'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Date</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' />
              <text column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[attr:location:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
                <format attr='font-family' value='Trebuchet MS' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:Calculation_3332382266630590467:qk]' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:Calculation_3332382266708680726:qk]</rows>
        <cols>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:qk]</cols>
        <pages>
          <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:ok]</column>
        </pages>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontname='Tableau Bold'>&lt;Page Name&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-12-28 04:45:57.446#'>
                  <node-reference>
                    <axis>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.77931920322766968'>
                  <node-reference>
                    <axis>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:Calculation_3332382266708680726:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>#2021-09-13 00:00:00#</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-04-08 21:45:46.504#'>
                  <node-reference>
                    <axis>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.72620490899366574'>
                  <node-reference>
                    <axis>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:Calculation_3332382266708680726:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>#2021-09-13 00:00:00#</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' line-stroke-width='2' lines='true' mark-color-auto='false' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{991CF4BE-18C3-4EF9-AEB4-AC653594F79C}' />
    </worksheet>
    <worksheet name='% of Positive cases that were lethal'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
            <column caption='Lethal Rate' datatype='real' name='[Calculation_2453898864956395520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_deaths]/[total_cases]' />
            </column>
            <column-instance column='[Calculation_2453898864956395520]' derivation='Avg' name='[avg:Calculation_2453898864956395520:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_9336C934EFFA498AAF46846CB17216D9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:Calculation_2453898864956395520:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:Calculation_2453898864956395520:qk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:Calculation_2453898864956395520:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:Calculation_2453898864956395520:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:Calculation_2453898864956395520:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' value='Location'>
              <formatted-text>
                <run fontalignment='1'>Location</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:Calculation_2453898864956395520:qk]' />
              <size column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:Calculation_2453898864956395520:qk]' />
              <text column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2AB1E3DF-1097-4294-8155-ADCC20C8DCC7}' />
    </worksheet>
    <worksheet name='Number of cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_CD95EA19387C41D6810A1484ECFF8E3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Latitude (generated)]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Longitude (generated)]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Longitude (generated)]' field-type='quantitative' max='50343937.986276269' min='13305108.250211347' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Latitude (generated)]' field-type='quantitative' max='17880233.771531694' min='-4003257.8795305113' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' />
              <color column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]' />
              <geometry column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Latitude (generated)]</rows>
        <cols>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{54D702DE-D3CD-4D0F-B8E5-8B18A7A1B1AA}' />
    </worksheet>
    <worksheet name='Partially and fully vaccinated population'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[people_fully_vaccinated]' derivation='Max' name='[max:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_vaccinated]' derivation='Max' name='[max:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5_40741DBF2B5540C3BD3A3DE7C99FE573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Multiple Values]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Multiple Values]' value='n#,##0,,,B;-#,##0,,,B' />
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]' value='N' />
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]' value='N' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]' value='n#,##0,,,B;-#,##0,,,B' />
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:qk]' value='*d mmmm, yyyy' />
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Multiple Values]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Multiple Values]</rows>
        <cols>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{6C1AAED8-6339-4065-950C-08E3217B6B19}' />
    </worksheet>
    <worksheet name='Population fully and partially vaccinated on Sept 13, 2021'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[people_fully_vaccinated]' derivation='Max' name='[max:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_vaccinated]' derivation='Max' name='[max:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]' value='n#,##0,,,B;-#,##0,,,B' />
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]' value='n#,##0,,,B;-#,##0,,,B' />
            <format attr='text-format' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Multiple Values]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' value='Location'>
              <formatted-text>
                <run fontalignment='1'>Location</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</rows>
        <cols>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{C6158B2B-C348-4994-8663-FECF04AF9D39}' />
    </worksheet>
    <worksheet name='Relationship b/w no. of deaths and GDP per Capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
            <column-instance column='[gdp_per_capita]' derivation='Avg' name='[avg:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_9336C934EFFA498AAF46846CB17216D9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_deaths:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:gdp_per_capita:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[sum:gdp_per_capita:qk]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:gdp_per_capita:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' value='Location'>
              <formatted-text>
                <run fontalignment='1'>Location</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.087458610534668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_deaths:qk]</rows>
        <cols>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:gdp_per_capita:qk]</cols>
      </table>
      <simple-id uuid='{1EC51B48-6DDC-463B-8F29-3F720C2F2424}' />
    </worksheet>
    <worksheet name='Totals Tests'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[total_tests]' derivation='Max' name='[max:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action8_CC725DB6404B4B6F933F507988EFFBEE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_tests:qk]' palette='orange_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_tests:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_tests:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_tests:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_tests:qk]' />
              <color column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_tests:qk]' />
              <text column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F784F57F-3C75-44BD-9768-7F382C53BE3F}' />
    </worksheet>
    <worksheet name='Vaccinated population based on continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[people_vaccinated]' derivation='Max' name='[max:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5_40741DBF2B5540C3BD3A3DE7C99FE573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[Action (Location)]</column>
            <column>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]' />
              <wedge-size column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_vaccinated:qk]' />
              <size column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:population:qk]' />
              <text column='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Tableau Medium' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FC9E7A80-11FA-4568-AE6B-157D5CBE6298}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Cases and deaths Dash'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
      </datasources>
      <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='53056' id='3' name='Number of cases' w='45012' x='561' y='733'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='1' />
          </zone-style>
        </zone>
        <zone h='5746' id='4' name='Number of cases' pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]' type-v2='color' w='19077' x='-2307' y='8557' />
        <zone h='52567' id='5' name='Relationship b/w no. of deaths and GDP per Capita' w='41521' x='46197' y='1345'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='1' />
          </zone-style>
        </zone>
        <zone h='51100' id='6' name='Relationship b/w no. of deaths and GDP per Capita' pane-specification-id='2' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type-v2='color' w='10474' x='88653' y='2567' />
        <zone h='45721' id='15' name='% of Positive cases that were lethal' w='25873' x='686' y='53667'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='43154' id='16' name='% of Positive cases that were lethal' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type-v2='filter' w='9975' x='26870' y='54768' />
        <zone h='44988' id='17' name='Totals Tests' w='61035' x='38092' y='54401'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='21' param='vert' type-v2='layout-flow' w='99002' x='499' y='978'>
                <zone fixed-size='280' h='53056' id='3' is-fixed='true' name='Number of cases' w='45012' x='561' y='733'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5746' id='4' name='Number of cases' pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]' type-v2='color' w='19077' x='-2307' y='8557'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52567' id='5' is-fixed='true' name='Relationship b/w no. of deaths and GDP per Capita' w='41521' x='46197' y='1345'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='51100' id='6' name='Relationship b/w no. of deaths and GDP per Capita' pane-specification-id='2' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type-v2='color' w='10474' x='88653' y='2567'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43154' id='16' mode='checkdropdown' name='% of Positive cases that were lethal' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type-v2='filter' w='9975' x='26870' y='54768'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45721' id='15' is-fixed='true' name='% of Positive cases that were lethal' w='25873' x='686' y='53667'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44988' id='17' is-fixed='true' name='Totals Tests' w='61035' x='38092' y='54401'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CDC3B0AA-AD0C-4CBD-8A83-88BEC9ECE44A}' />
    </dashboard>
    <dashboard name='Vaccination Dash'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='owid-covid-data' name='federated.0ylmd9o0wn1v0s1ctgame0l4juk4' />
      </datasources>
      <datasource-dependencies datasource='federated.0ylmd9o0wn1v0s1ctgame0l4juk4'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='50367' id='3' name='% of Population fully vaccinated' w='48940' x='623' y='1467'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='33496' id='4' name='% of Population fully vaccinated' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type-v2='filter' w='9975' x='50187' y='18337' />
        <zone h='15159' id='5' name='% of Population fully vaccinated' synchronized='1' type-v2='currpage' w='9975' x='50312' y='2200' />
        <zone h='44866' id='6' name='Partially and fully vaccinated population' w='48878' x='748' y='52689'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='6235' id='8' leg-item-layout='vert' name='Partially and fully vaccinated population' pane-specification-id='3' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]' show-title='false' type-v2='color' w='18080' x='8354' y='64181' />
        <zone h='44621' id='13' name='Population fully and partially vaccinated on Sept 13, 2021' w='38092' x='50561' y='52934'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='40587' id='14' name='Population fully and partially vaccinated on Sept 13, 2021' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type-v2='filter' w='9975' x='89339' y='56357' />
        <zone h='48778' id='15' name='Vaccinated population based on continents' w='37406' x='61160' y='2934'>
          <zone-style>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='27628' id='16' name='Vaccinated population based on continents' pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]' type-v2='color' w='8978' x='89277' y='10758' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='24' param='vert' type-v2='layout-flow' w='99002' x='499' y='978'>
                <zone h='33496' id='4' mode='checkdropdown' name='% of Population fully vaccinated' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type-v2='filter' w='9975' x='50187' y='18337'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50367' id='3' is-fixed='true' name='% of Population fully vaccinated' w='48940' x='623' y='1467'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48778' id='15' is-fixed='true' name='Vaccinated population based on continents' w='37406' x='61160' y='2934'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27628' id='16' name='Vaccinated population based on continents' pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]' type-v2='color' w='8978' x='89277' y='10758'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44866' id='6' is-fixed='true' name='Partially and fully vaccinated population' w='48878' x='748' y='52689'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6235' id='8' leg-item-layout='vert' name='Partially and fully vaccinated population' pane-specification-id='3' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]' show-title='false' type-v2='color' w='18080' x='8354' y='64181'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40587' id='14' mode='checkdropdown' name='Population fully and partially vaccinated on Sept 13, 2021' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type-v2='filter' w='9975' x='89339' y='56357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44621' id='13' is-fixed='true' name='Population fully and partially vaccinated on Sept 13, 2021' w='38092' x='50561' y='52934'>
                  <zone-style>
                    <format attr='border-color' value='#e6e6e6' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15159' id='5' name='% of Population fully vaccinated' synchronized='1' type-v2='currpage' w='9975' x='50312' y='2200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{26EBDD0F-6ACA-4E04-964D-1E967B753F5F}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Cases and deaths Dash'>
      <viewpoints>
        <viewpoint name='% of Positive cases that were lethal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of cases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Relationship b/w no. of deaths and GDP per Capita'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Totals Tests'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{CA62AAE0-A3EE-46B2-BAE6-02D3F0DD4B30}' />
    </window>
    <window class='dashboard' name='Vaccination Dash'>
      <viewpoints>
        <viewpoint name='% of Population fully vaccinated'>
          <current-page>
            <multibucket>
              <bucket>#2021-09-13 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Partially and fully vaccinated population'>
          <zoom type='entire-view' />
          <highlight field='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Population fully and partially vaccinated on Sept 13, 2021' />
        <viewpoint name='Vaccinated population based on continents'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{E5D6937F-3B38-4D5E-860C-D882AD92FAD2}' />
    </window>
    <window class='worksheet' name='Number of cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_cases:qk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4CEAB55B-70B6-454C-92A8-DAF052DC6304}' />
    </window>
    <window class='worksheet' name='Relationship b/w no. of deaths and GDP per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:extreme_poverty:ok]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:icu_patients:ok]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:total_tests:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D726FFC-6C89-48EA-8BB4-B7CF718EDE52}' />
    </window>
    <window class='worksheet' name='% of Positive cases that were lethal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[avg:Calculation_2453898864956395520:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{931A545D-A483-42F7-8C86-E3AE00D8E3CA}' />
    </window>
    <window class='worksheet' name='Totals Tests'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_tests:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:total_tests:qk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD6C45E7-2D20-407B-84CC-7D37EA05B35F}' />
    </window>
    <window class='worksheet' name='% of Population fully vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-09-13 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[attr:location:nk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[tyr:date:qk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{996D1981-C68C-48C4-BEDB-28A77A89E3BD}' />
    </window>
    <window class='worksheet' name='Partially and fully vaccinated population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:people_fully_vaccinated:qk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:Calculation_3332382266696626182:qk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:Calculation_3332382266696646663:qk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:Total Deaths (bin):qk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FF3FF6B-7CD0-4339-AD6E-DD2364892215}' />
    </window>
    <window class='worksheet' name='Population fully and partially vaccinated on Sept 13, 2021'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30DA5E3D-F1AA-4821-8F08-D497F7DF708B}' />
    </window>
    <window class='worksheet' name='Vaccinated population based on continents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[max:population:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:continent:nk]</field>
            <field>[federated.0ylmd9o0wn1v0s1ctgame0l4juk4].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{145B9FD1-1E4C-4501-9C35-51E3EE85577C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='% of Population fully vaccinated' width='192'>
      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
      CYpNrRLQI5UAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='% of Positive cases that were lethal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cases and deaths Dash' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Number of cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Partially and fully vaccinated population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population fully and partially vaccinated on Sept 13, 2021' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Relationship b/w no. of deaths and GDP per Capita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Totals Tests' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vaccinated population based on continents' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vaccination Dash' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
